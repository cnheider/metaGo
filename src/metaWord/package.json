{
    "name": "MetaWord",
    "displayName": "MetaWord",
    "_description": "word based cursor movement, selection and deletion",
    "icon": "images/metaWord.png",
    "version": "1.0.0",
    "publisher": "metaseed",
    "homepage": "https://github.com/metaseed/metaGo/tree/master/src/metaWord",
    "license": "MIT",
    "keywords": [
        "keyboard",
        "cursor",
        "jump",
        "jumpy",
        "goto",
        "space jumper",
        "metaWord",
        "word selection",
        "big word",
        "small word",
        "space word",
        "delete",
        "select"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/metaseed/metaGo/tree/master/src/metaWord"
    },
    "bugs": {
        "url": "https://github.com/metaseed/metaGo/issues",
        "email": "metaseed@gmail.com"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./dist/extension",
    "contributes": {
        "commands": [
            {
                "command": "metaGo.cursorSpaceWordLeft",
                "title": "xx: metaGo.cursorSpaceWordLeft"
            },
            {
                "command": "metaGo.cursorSpaceWordLeftSelect",
                "title": "xx: metaGo.cursorSpaceWordLeftSelect"
            },
            {
                "command": "metaGo.cursorSpaceWordLeftDelete",
                "title": "xx: metaGo.cursorSpaceWordLeftDelete"
            },
            {
                "command": "metaGo.cursorSpaceWordRight",
                "title": "xx: metaGo.cursorSpaceWordRight"
            },
            {
                "command": "metaGo.cursorSpaceWordRightSelect",
                "title": "xx: metaGo.cursorSpaceWordRightSelect"
            },
            {
                "command": "metaGo.cursorSpaceWordRightDelete",
                "title": "xx: metaGo.cursorSpaceWordRightDelete"
            }
        ],
        "keybindings": [
            {
                "key": "shift+backspace",
                "command": "deleteAllLeft",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "shift+delete",
                "command": "deleteAllRight",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+k ctrl+right",
                "command": "workbench.action.moveEditorToNextGroup",
                "_note": "ctrl+alt+right by default"
            },
            {
                "key": "ctrl+k ctrl+left",
                "command": "workbench.action.moveEditorToPreviousGroup",
                "_note": "ctrl+alt+left by default"
            },
            {
                "key": "win+alt+left",
                "mac": "cmd+alt+left",
                "command": "cursorWordPartLeft",
                "when": "textInputFocus"
            },
            {
                "key": "win+alt+right",
                "mac": "cmd+alt+right",
                "command": "cursorWordPartRight",
                "when": "textInputFocus"
            },
            {
                "key": "win+alt+shift+right",
                "mac": "cmd+alt+shift+right",
                "command": "cursorWordPartRightSelect",
                "when": "textInputFocus",
            },
            {
                "key": "win+alt+shift+left",
                "mac": "mac+alt+shift+left",
                "command": "cursorWordPartLeftSelect",
                "when": "textInputFocus"
            },
            {
                "key": "win+alt+backspace",
                "mac": "cmd+alt+backspace",
                "command": "deleteWordPartLeft",
                "when": "textInputFocus && !editorReadonly"
            },
            {
                "key": "win+alt+delete",
                "mac": "cmd+alt+delete",
                "command": "deleteWordPartRight",
                "when": "textInputFocus && !editorReadonly"
            },

            {
                "key": "alt+v",
                "command": "editor.action.toggleColumnSelection"
            },
            {
                "command": "metaGo.cursorSpaceWordLeft",
                "key": "ctrl+alt+left",
                "when": "editorTextFocus",
                "_description": "move cursor to the begin of the word which separated by 'space'"
            },
            {
                "command": "metaGo.cursorSpaceWordLeftSelect",
                "key": "ctrl+alt+shift+left",
                "when": "editorTextFocus",
                "_description": "move cursor to the begin of the word which separated by 'space'"
            },
            {
                "command": "metaGo.cursorSpaceWordLeftDelete",
                "key": "ctrl+alt+backspace",
                "when": "editorTextFocus",
                "_description": "delete cursor to the begin of the word which separated by 'space'"
            },
            {
                "command": "metaGo.cursorSpaceWordRight",
                "key": "ctrl+alt+right",
                "when": "editorTextFocus",
                "_description": "move cursor to the end of the word which separated by 'space'"
            },
            {
                "command": "metaGo.cursorSpaceWordRightSelect",
                "key": "ctrl+shift+alt+right",
                "when": "editorTextFocus",
                "_description": "select to the end of the word which separated by 'space'",
                "_note": "ctrl+shift+alt+right used for cursorColumnSelectRight by default. note: use 'alt+v'"
            },
            {
                "command": "metaGo.cursorSpaceWordRightDelete",
                "key": "ctrl+alt+delete",
                "when": "editorTextFocus",
                "_description": "delete to the end of the word which separated by 'space'"
            },
            {
                "command": "metaGo.cursorSpaceWordRightDelete",
                "key": "ctrl+alt+shift+backspace",
                "when": "editorTextFocus",
                "_description": "delete to the end of the word which separated by 'space'"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "node ../../changelog.js && webpack --mode production",
        "publish": "git tag -a V%npm_package_version% -m 'V%npm_package_version%' && git push origin --tags && vsce publish",
        "vscode:prepackage": "node changelog.js && webpack --mode production",
        "package": "vsce package",
        "deploy": "npm run package && code --uninstall-extension metaseed.metaword && code --install-extension metaword-%npm_package_version%.vsix",
        "build": "webpack --mode development",
        "watch": "webpack --mode development --watch --info-verbosity verbose",
        "test-compile": "tsc -p ./",
        "lint": "tslint -p ./",
        "tswatch": "tsc -watch -p ./",
        "compile": "tsc -p ./",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js"
    },
    "engines": {
        "vscode": "^1.39.0"
    },
    "devDependencies": {
        "@types/mocha": "^7.0.1",
        "@types/node": "^13.7.1",
        "@types/vscode": "^1.39.0",
        "eslint": "^6.8.0",
        "mocha": "^7.0.1",
        "source-map-support": "^0.5.12",
        "ts-loader": "^6.2.2",
        "typescript": "^3.8.3",
        "vsce": "^1.75.0",
        "webpack": "^4.42.1",
        "webpack-cli": "^3.3.11",
        "terser-webpack-plugin": "^2.3.5",
        "copy-webpack-plugin": "^6.0.1"
    }
}